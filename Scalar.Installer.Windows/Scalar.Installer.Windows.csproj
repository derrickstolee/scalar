<Project Sdk="Microsoft.Build.NoTargets">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.0</TargetFramework>
    <RuntimeIdentifier>win-x64</RuntimeIdentifier>
    <LayoutPath>$(ProjectOutPath)layout\$(Configuration)\</LayoutPath>
    <InstallerOutputPath>$(ProjectOutPath)installer\$(Configuration)\</InstallerOutputPath>
  </PropertyGroup>

  <ItemDefinitionGroup>
    <ProjectReference ReferenceOutputAssembly="false" Private="false" />
  </ItemDefinitionGroup>

  <ItemGroup>
    <ProjectReference Include="..\Scalar\Scalar.csproj" />
    <ProjectReference Include="..\Scalar.Service\Scalar.Service.csproj" />
    <ProjectReference Include="..\Scalar.Service.UI\Scalar.Service.UI.csproj" />
    <ProjectReference Include="..\Scalar.Upgrader\Scalar.Upgrader.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Tools.InnoSetup" />
  </ItemGroup>

  <!-- Only create the installer when running on Windows -->
  <Target Name="BuildInstaller" AfterTargets="AfterBuild" Condition="'$(OSPlatform)' == 'windows'" >
    <!-- Ensure all projects have been published with the correct runtime identifier and configuration -->
    <MSBuild Projects="@(ProjectReference)"
             Targets="Publish"
             Properties="
             Configuration=$(Configuration);
             RuntimeIdentifier=$(RuntimeIdentifier);"
             BuildInParallel="true" />

    <!-- Bring together all published binaries -->
    <PropertyGroup>
      <PublishPathFragment>bin\$(Configuration)\$(TargetFramework)\$(RuntimeIdentifier)\publish\</PublishPathFragment>
    </PropertyGroup>
    <ItemGroup>
      <_PublishFiles Include="$(RepoOutPath)%(ProjectReference.Filename)\$(PublishPathFragment)\**\*" />
    </ItemGroup>
    <Copy SourceFiles="@(_PublishFiles)"
          DestinationFolder="$(LayoutPath)\%(RecursiveDir)"
          SkipUnchangedFiles="true"
          OverwriteReadOnlyFiles="true"/>

    <!-- Run the Inno setup tool to build the installer -->
    <Exec Command="$(PkgTools_InnoSetup)\tools\ISCC.exe /DLayoutPath=$(LayoutPath) /DScalarVersion=$(ScalarVersion) Setup.iss /O$(InstallerOutputPath)"/>

    <!-- Mark the installer file as a output for this target so that the Clean target will delete it -->
    <ItemGroup>
      <FileWrites Include="$(InstallerOutputPath)SetupScalar.$(ScalarVersion).exe" />
    </ItemGroup>

  </Target>

</Project>
