parameters:
  useWatchman: true

steps:

  - task: DownloadBuildArtifacts@0
    displayName: Download functional tests drop
    inputs:
      buildType: current
      downloadType: specific
      artifactName: FunctionalTests_$(platformFriendlyName)_$(configuration)
      downloadPath: $(Build.BinariesDirectory)

  - task: DownloadBuildArtifacts@0
    displayName: Download installers drop
    inputs:
      buildType: current
      downloadType: specific
      artifactName: Installers_$(platformFriendlyName)_$(configuration)
      downloadPath: $(Build.BinariesDirectory)

  - bash: |
      chmod +x $(Build.BinariesDirectory)/FunctionalTests_$(platformFriendlyName)_$(configuration)/Scalar.FunctionalTests
      chmod +x $(Build.BinariesDirectory)/Installers_$(platformFriendlyName)_$(configuration)/*.sh
    displayName: Ensure all scripts and binaries are executable

  - ${{ if eq(parameters.useWatchman, 'true') }}:
    - bash: $(Build.BinariesDirectory)/Installers_$(platformFriendlyName)_$(configuration)/InstallScalar.sh
      displayName: Install product (with watchman)

  - ${{ if ne(parameters.useWatchman, 'true') }}:
    - bash: $(Build.BinariesDirectory)/Installers_$(platformFriendlyName)_$(configuration)/InstallScalar.sh --no-watchman
      displayName: Install product (without watchman)

  - bash: $(Build.BinariesDirectory)/FunctionalTests_$(platformFriendlyName)_$(configuration)/Scalar.FunctionalTests --full-suite --trace2-output=$(Build.ArtifactStagingDirectory)/logs/trace2-event.log
    displayName: Run functional tests

  - ${{ if eq(parameters.useWatchman, 'true') }}:
    - task: PublishTestResults@2
      displayName: Publish functional tests results
      inputs:
        testRunner: NUnit
        testResultsFiles: "**\\TestResult*.xml"
        searchFolder: $(System.DefaultWorkingDirectory)
        testRunTitle: macOS $(configuration) Functional Tests (with watchman)
        publishRunAttachments: true
      condition: succeededOrFailed()

  - ${{ if ne(parameters.useWatchman, 'true') }}:
    - task: PublishTestResults@2
      displayName: Publish functional tests results
      inputs:
        testRunner: NUnit
        testResultsFiles: "**\\TestResult*.xml"
        searchFolder: $(System.DefaultWorkingDirectory)
        testRunTitle: macOS $(configuration) Functional Tests (without watchman)
        publishRunAttachments: true
      condition: succeededOrFailed()

  - ${{ if eq(parameters.useWatchman, 'true') }}:
    - task: PublishBuildArtifacts@1
      displayName: Publish test and installation logs
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)/logs'
        artifactName: Logs_$(platformFriendlyName)_Watchman
      condition: failed()

  - ${{ if ne(parameters.useWatchman, 'true') }}:
    - task: PublishBuildArtifacts@1
      displayName: Publish test and installation logs
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)/logs'
        artifactName: Logs_$(platformFriendlyName)
      condition: failed()

  - bash: sudo rm -rf $HOME/Scalar.FT
    displayName: Cleanup test repositories
    condition: always()

  - bash: |
      pkill -9 -l Scalar.FunctionalTests
      pkill -9 -l git
      pkill -9 -l scalar
      true # always succeed; only a best effort cleanup
    displayName: Terminate processes
    condition: always()

  - bash: sudo rm -rf $(Build.BinariesDirectory)/FunctionalTests_$(platformFriendlyName)_$(configuration)
    displayName: Delete functional tests
    condition: always()
